import org.openapitools.generator.gradle.plugin.tasks.GenerateTask
import org.springdoc.openapi.gradle.plugin.OpenApiGeneratorTask

plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.github.johnrengelman.processes" version "0.5.0"
    id "org.springdoc.openapi-gradle-plugin" version "1.3.3"
    id "org.openapi.generator" version "5.3.0"
}

dependencies {
    implementation project(":api")

    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.5.12'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    //spring-test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}


def clientConfig = [
        description: "An autogenerated client to use the ${project.ext.displayName} Api",
        name       : "${project.ext.displayName} Client",
        id         : "${project.ext.artifactName}-client",
        rootPackage: project.ext.rootPackage,
]
project.ext {
    generatorTask = GenerateTask
    oasTask = OpenApiGeneratorTask
    client = clientConfig
}
apply from: "clients.gradle"


openApi {
    outputDir.set(rootDir)
}
javadocJar.enabled = false
sourcesJar.enabled = false
name: Check Reviews

on:
  pull_request_review:
    types: [ submitted, edited ]

env:
  minReviews: 1

jobs:
  check_reviews:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Read reviews
        uses: github-actions-tools/gh-reviews-count@v0.0.1
        id: reviewsCount
        with:
          pull_number: ${{ github.event.pull_request.number }}
      - name: Check review status
        run: |
          echo "Approved: $APPROVED"
          echo "Changes requested: $CHANGES_REQUESTED"
          echo "Dismissed: $DISMISSED"
          if [ "$DISMISSED" -gt 0 ]; then
            echo "Dismissed reviews found."
            exit 1
          fi
          if [ "$CHANGES_REQUESTED" -gt 0 ]; then
            echo "There are open change requests"
            exit 1
          fi
        if: steps.reviewsCount.outputs.approved > 0
        env:
          APPROVED: ${{ steps.reviewsCount.outputs.approved }}
          DISMISSED: ${{ steps.reviewsCount.outputs.dismissed }}
          PENDING: ${{ steps.reviewsCount.outputs.pending }}
          CHANGES_REQUESTED: ${{ steps.reviewsCount.outputs.changes_requested }}

      - name: approve merge
        if: always()
        uses: ./.github/actions/set-label
        with:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          label: 'ready for merge'
          needed: |
            steps.reviewsCount.outputs.approved >= env.minReviews &&
            steps.reviewsCount.outputs.pending == 0 &&
            steps.reviewsCount.outputs.changes_requested == 0 &&
            steps.reviewsCount.outputs.dismissed == 0
      - name: update review label
        if: always()
        uses: ./.github/actions/set-label
        with:
          needed: |
            ${{ !(
            steps.reviewsCount.outputs.approved >= env.minReviews &&
            steps.reviewsCount.outputs.pending == 0 &&
            steps.reviewsCount.outputs.changes_requested == 0 &&
            steps.reviewsCount.outputs.dismissed == 0
            ) }}
          label: 'in review'
          token: ${{ secrets.GITHUB_TOKEN }}
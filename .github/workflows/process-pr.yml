name: Process PR

on:
  pull_request:
    types: [ synchronize, edited, ready_for_review, opened, reopened ]
    branches:
      - master
      - main
      - staging
  pull_request_target:
    types: [ synchronize, edited, ready_for_review, opened, reopened ]
    branches:
      - dev
      - hotfix

env:
  revoke_sensitive_fork: true

  is_staging_branch: ${{ github.base_ref == 'staging' }}
  is_release_branch: ${{ github.base_ref == 'main' || github.base_ref == 'master' }}
  is_feature_branch: ${{ github.base_ref == 'dev'  || github.base_ref == 'hotfix' }}
  is_hotfix_branch: ${{ github.base_ref == 'hotfix' }}
  is_fork: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
  is_dependabot: ${{ github.actor == 'dependabot[bot]' }}

jobs:
  branching-check:
    name: Check Branching
    if: (github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'edited')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2
      - name: revoke bad fork
        if: env.is_fork == 'true' && env.is_feature_branch == 'false'
        run: |
          exit 1
      - name: update forking message
        uses: ./.github/actions/pr-message
        if: always()
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          needed: ${{ job.status == 'failure' }}
          number: ${{ github.event.pull_request.number }}
          key: fork_forbidden
          body: |
            # ❌

            Forks are only allowed to merge into `dev` or `hotfix`

            > Please change your target branch!
      - name: Check master branch
        id: master_check
        uses: ./.github/actions/branch-check
        if: env.is_release_branch == 'true'
        with:
          allowedBranches: hotfix|documentation|staging
      - name: Check staging branch
        id: staging_check
        uses: ./.github/actions/branch-check
        if: env.is_staging_branch == 'true'
        with:
          allowedBranches: hotfix|dev
      - name: Check dev branch
        id: dev_check
        uses: ./.github/actions/branch-check
        if: env.is_feature_branch == 'true' && env.is_fork == 'false' && env.is_dependabot == 'false'
        with:
          allowedBranches: feat\/.+|hotfix|bugfix\/.+ #this is a regex
      - name: check hotfix branch
        id: hotfix_check
        uses: ./.github/actions/branch-check
        if: env.is_hotfix_branch == 'true' && env.is_fork == 'false' && env.is_dependabot == 'false'
        with:
          allowedBranches: bugfix\/.+
      - name: Add master branch message
        if: failure() && (steps.master_check.outcome == 'failure')
        uses: ./.github/actions/pr-message
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          needed: true
          key: _bad_branching_
          number: ${{ github.event.pull_request.number }}
          body: ${{ steps.master_check.outputs.errorMessage }}
      - name: Add staging branch message
        if: failure() && (steps.staging_check.outcome == 'failure')
        uses: ./.github/actions/pr-message
        with:
          needed: true
          key: _bad_branching_
          number: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.staging_check.outputs.errorMessage }}
      - name: Add dev branch message
        if: failure() && (steps.dev_check.outcome == 'failure') && env.is_dependabot == 'false'
        uses: ./.github/actions/pr-message
        with:
          needed: true
          key: _bad_branching_
          number: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.dev_check.outputs.errorMessage }}
      - name: Add hotfix branch message
        if: failure() && (steps.hotfix_check.outcome == 'failure')
        uses: ./.github/actions/pr-message
        with:
          needed: true
          key: _bad_branching_
          number: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.hotfix_check.outputs.errorMessage }}
      - name: Remove wrong branch message
        uses: ./.github/actions/pr-message
        with:
          needed: false
          key: _bad_branching_
          number: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          body: Your branching is fine :)
      - name: label invalid
        uses: ./.github/actions/set-label
        if: always()
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          needed: ${{ job.status == 'failure' }}
          label: invalid
  formal_check:
    name: "Formal Check"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3.0.2
      - name: check PR name
        id: name_check
        if: (github.event.action == 'edited' || github.event.action == 'opened') && env.is_feature_branch == 'true'
        with:
          text: ${{ github.event.pull_request.title }}
          regex: '^((build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test|bump)(\(\w+\))?!?:\s.+)$'
        uses: actions-ecosystem/action-regex-match@v2.0.2
      - name: Update invalid name message
        if: github.event.action == 'edited' || github.event.action == 'opened'
        uses: ./.github/actions/pr-message
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          needed: ${{ steps.name_check.outputs.match == '' && env.is_feature_branch == 'true' }}
          number: ${{ github.event.pull_request.number }}
          key: invalid_name
          body: |
            ## Title invalid
            The PR title must obey the conventional-commits ([here](https://www.conventionalcommits.org/en/v1.0.0-beta.1/)) standard!
            ### Examples
            ```
            fix(ci): Fix broken build
            feat(api): Add API feature
            test: improve test coverage
            pref(db): Improve database performance
            ```
            > Change the title to match the conventional-commits standard.
            > Your PR will be re-validated when you change the title.
      - name: Fail on invalid title
        if: steps.name_check.outputs.match == '' && (github.event.action == 'edited' || github.event.action == 'opened') && env.is_feature_branch == 'true'
        run: exit 1
      - name: check changed files
        uses: tony84727/changed-file-filter@v0.2.0
        id: filter
        if: github.event.action == 'syncronized' || github.event.action == 'opened'
        with:
          filters: |
            sensitive:
              - '.github/**'
              - '.gitignore'
              - '.gitmodules'
              - 'gradle/wrapper/**'
              - '**.gradle'
              - 'gradle'
              - 'gradlew'
              - 'gradlew.bat'

      - name: set security label
        if: github.event.action == 'syncronized' || github.event.action == 'opened'
        uses: ./.github/actions/set-label
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          needed: ${{ steps.filter.outputs.sensitive == 'true' }}
          label: sensitive
      - name: update security message
        if: github.event.action == 'syncronized' || github.event.action == 'opened'
        uses: ./.github/actions/pr-message
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          needed: ${{ steps.filter.outputs.sensitive }}
          key: "security_alert"
          number: ${{ github.event.pull_request.number }}
          body: |
            ## Security
            This PR contains sensitive files.
            ```
            ${{ steps.filter.outputs.sensitive_files }}
            ```
      - name: revoke senitive fork
        if: |
          env.is_fork == 'true' &&
          env.is_dependabot == 'false' &&
          env.revoke_sensitive_fork == 'true' &&
          (github.event.action == 'syncronized' || github.event.action == 'opened')
        run: exit 1
      - name: label by changed files
        if: github.event.action == 'syncronized' || github.event.action == 'opened'
        uses: actions/labeler@v3
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: label by branch
        uses: ffittschen/pr-branch-labeler@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
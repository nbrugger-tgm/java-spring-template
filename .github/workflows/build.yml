name: Build

on:
  pull_request:
    branches:
      - master
      - dev
      - main
      - staging
      - hotfix
    types: [ labeled ]
  push:
    branches:
      - master
      - dev
      - main
      - staging
      - hotfix

jobs:
  build:
    name: compile
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event.label.name == 'ready for build' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: compile
        uses: ./.github/actions/gradle
        with:
          task: jar
      - name: store build
        uses: actions/upload-artifact@v2
        with:
          name: base-build
          path: |
            .gradle
            modules/*/build
          retention-days: 1
  unit_testing:
    runs-on: ubuntu-latest
    name: Unit testing
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: base-build
      - name: run tests
        uses: ./.github/actions/gradle
        with:
          task: unitTest
      - name: store unit results
        uses: actions/upload-artifact@v2
        with:
          name: unit-result
          path: |
            modules/*/build/**
          retention-days: 1
  integration_testing:
    runs-on: ubuntu-latest
    name: Integration testing
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: base-build
      - name: run tests
        uses: ./.github/actions/gradle
        with:
          task: integrationTest
      - name: store integration results
        uses: actions/upload-artifact@v2
        with:
          name: integration-result
          path: |
            modules/*/build/**
          retention-days: 1
  architecture_testing:
    runs-on: ubuntu-latest
    name: Architecture testing
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: base-build
      - name: run tests
        uses: ./.github/actions/gradle
        with:
          task: archTest
      - name: store architecture results
        uses: actions/upload-artifact@v2
        with:
          name: architecture-result
          path: |
            modules/*/build/**
          retention-days: 1
  codecov:
    runs-on: ubuntu-latest
    name: code-coverage
    needs:
      - unit_testing
      - architecture_testing
      - integration_testing
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: download base build
        uses: actions/download-artifact@v2
        with:
          name: base-build
      - name: download unit results
        uses: actions/download-artifact@v2
        with:
          name: unit-result
      - name: download unit results
        uses: actions/download-artifact@v2
        with:
          name: integration-result
      - name: download unit results
        uses: actions/download-artifact@v2
        with:
          name: architecture-result
      - name: check code coverage
        run: ./gradlew check
      - name: upload sonarqube report
        env:
          #This will cause issues as it will not be available on a fork branch
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube --info
  openapi_diff:
    runs-on: ubuntu-latest
    name: OpenAPI
    needs: codecov
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check api changes
        uses: tony84727/changed-file-filter@v0.2.0
        id: filter
        with:
          filters: |
            api:
              - 'modules/api/src/**'
      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: base-build
      - name: Build PR OAS
        if: steps.filter.outputs.api == 'true'
        run: |
          chmod +x gradlew
          ./gradlew generateOpenApiDocs
      - name: Checkout base branch
        if: steps.filter.outputs.api == 'true'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.base_ref }}
          path: 'base'
      - name: Build OAS diff
        if: steps.filter.outputs.api == 'true'
        uses: nbrugger-tgm/open-api-diff-notes-action@master
        with:
          headFile: openapi.json
          baseFile: base/openapi.json
          output_path: ~/openapi_diff.json
          github_token: ${{ secrets.GITHUB_TOKEN }}
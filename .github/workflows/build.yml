name: Build

on:
  pull_request:
    branches:
      - master
      - dev
      - main
      - staging
      - hotfix
    types: [ labeled ]
  push:
    branches:
      - master
      - dev
      - main
      - staging
      - hotfix

jobs:
  build:
    name: compile
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event.label.name == 'ready for build' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: prepare gradle
        run: chmod +x gradlew
      - name: compile
        run: ./gradlew clean jar
      - name: store build
        uses: actions/upload-artifact@v2
        with:
          name: base-build
          path: |
            build
            */build
          retention-days: 1
  quality-check:
    runs-on: ubuntu-latest
    name: Quality Check
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: base-build
      - name: install java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: prepare gradle
        run: chmod +x gradlew
      - uses: gradle/wrapper-validation-action@v1
  testing:
    runs-on: ubuntu-latest
    name: Testing
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch Refs
        if: github.event_name == 'pull_request'
        run: git fetch origin ${{ github.base_ref }}
      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: base-build
      - name: install java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: prepare gradle
        run: chmod +x gradlew
      - name: run tests
        run: ./gradlew test
      - name: check code coverage
        run: ./gradlew check
      - name: print produced files
        run: ls */build/reports/ */build/libs */build/reports/jacoco
        continue-on-error: true
      - name: upload sonarqube report
        env:
          #This will cause issues as it will not be available on a fork branch
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube --info
  openapi_diff:
    runs-on: ubuntu-latest
    name: OpenAPI
    needs: testing
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check api changes
        uses: tony84727/changed-file-filter@v0.2.0
        id: filter
        with:
          filters: |
            api:
              - 'api/**'
              - 'openapi.json'
      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: base-build
      - name: Build PR OAS
        if: steps.filter.outputs.api == 'true'
        run: |
          chmod +x gradlew
          ./gradlew generateOpenApiDocs
      - name: Checkout base branch
        if: steps.filter.outputs.api == 'true'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.base_ref }}
          path: 'base'
      - name: Build OAS diff
        if: steps.filter.outputs.api == 'true'
        uses: nbrugger-tgm/open-api-diff-notes-action@master
        with:
          headFile: openapi.json
          baseFile: base/openapi.json
          output_path: ~/openapi_diff.json
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Commit OAS
        uses: swinton/commit@v2.0.0
        if: |
          !(github.event.pull_request.head.repo.full_name != github.repository &&
          github.actor != 'dependabot[bot]') &&
          steps.filter.outputs.api == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            openapi.json
          commit-message: 'docs(oas): auto update OpenAPI spec'
          ref: ${{ github.head_ref }}
on:
  pull_request:
    types:
      - labeled
    branches:
      - master
      - main
      - staging
  pull_request_target:
    types:
      - labeled
    branches:
      - dev
      - hotfix

env:
  is_fork: ${{ github.event.pull_request.head.repo.full_name != github.repository && github.actor != 'dependabot[bot]' }}

permissions:
  actions: read
  issues: write
  contents: write
  discussions: write
  pull-requests: write
  repository-projects: write

name: Finilize PR
################################################################################
#  this steps assumes that a careful and security-aware review is done         #
#  If you want to be save and dont trust the security review,                  #
#  we advise to disable this step for forks by adding :                        #
#                                                                              #
#   && env.is_fork == 'false'                                                  #
#                                                                              #
#  to the if condition of the lockdown job                                     #
################################################################################
jobs:
  lockdown:
    name: Lock PR
    runs-on: ubuntu-latest
    if: github.event.label.name == 'ready for merge'
    steps:
      - uses: actions/checkout@v2
      - name: lock pull request
        uses: sudo-bot/action-pull-request-lock@v1.0.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          lock-reason: resolved
  prebuild:
    name: Prebuild
    runs-on: ubuntu-latest
    if: github.event.label.name == 'ready for merge'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: prepare gradle
        run: chmod +x gradlew
      - name: build
        run: ./gradlew clean jar
      - name: store build
        uses: actions/upload-artifact@v2
        with:
          name: base-build
          path: |
            build
            */build
            .gradle
          retention-days: 1
  openapi:
    runs-on: ubuntu-latest
    name: Autogen OpenAPI
    needs: prebuild
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Check api changes
        uses: tony84727/changed-file-filter@v0.2.0
        id: filter
        with:
          filters: |
            api:
              - 'api/**'
              - 'openapi.json'
      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: base-build
      - name: Generate PR OAS
        if: steps.filter.outputs.api == 'true'
        run: |
          chmod +x gradlew
          ./gradlew generateOpenApiDocs
      - name: Checkout base branch
        if: steps.filter.outputs.api == 'true'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.base_ref }}
          path: 'base'
      - name: Build OAS diff
        if: steps.filter.outputs.api == 'true'
        uses: nbrugger-tgm/open-api-diff-notes-action@master
        with:
          headFile: openapi.json
          baseFile: base/openapi.json
          output_path: ~/openapi_diff.json
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Commit OAS
        if: steps.filter.outputs.api == 'true'
        uses: swinton/commit@v2.0.0
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            openapi.json
          commit-message: 'docs(oas): add PR changes to OAS'
          ref: ${{ github.head_ref }}
  client:
    name: Autogen clients
    needs: openapi
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check api changes
        uses: tony84727/changed-file-filter@v0.2.0
        id: filter
        with:
          filters: |
            api:
              - 'openapi.json'
      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: base-build
      - name: Build clients
        if: steps.filter.outputs.api == 'true'
        run: ./gradlew autogenClients
      - name: Commit clients
        if: steps.filter.outputs.api == 'true'
        uses: EndBug/add-and-commit@v7
        with:
          add: 'client'
          default_author: github_actions
          message: 'chore: autogenerate clients'
          pathspec_error_handling: ignore
          branch: ${{ github.head_ref }}
          # Arguments for the git pull command. Use NO-PULL to avoid the action pulling at all.
          # Default: '--no-rebase'
          pull: '--rebase'
          push: true
  semver:
    name: Create release
    runs-on: ubuntu-latest
    needs: prebuild
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Scan release stage
        id: branch
        run: |
          if [ "${{ github.base_ref }}" == 'main']; then
            echo "::set-output name=release_stage::release"
          elif [ "${{ github.base_ref }}" == 'staging' ]; then
            echo "::set-output name=release_stage::rc"
          elif [ "${{ github.base_ref }}" == 'dev' || "${{ github.base_ref }}" == 'hotfix' ]; then
            echo "::set-output name=release_stage::beta"
          fi
      - id: cz_pr
        name: Bump prerelase-version
        if: steps.branch.outputs.release_stage != 'release'
        uses: nbrugger-tgm/commitizen-action@master
        with:
          push: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}
          changelog_increment_filename: changelog_diff.md
          prerelease: ${{ steps.branch.outputs.release_stage }}
      - id: cz
        name: Bump release-version
        if: steps.branch.outputs.release_stage == 'release'
        uses: nbrugger-tgm/commitizen-action@master
        with:
          push: false
          dry_run: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}
          changelog_increment_filename: changelog_diff.md
      - id: Push bump
        run: |
          git push

  merge:
    name: Merge PR
    runs-on: ubuntu-latest
    needs:
      - openapi
      - client
      - semver
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Eval merge type
        id: eval
        run: |
          if [ ${{ github.base_ref }} == 'main' ]; then
            echo "::set-output name=merge_type::merge"
          elif [ ${{ github.base_ref }} == 'staging' ]; then
            echo "::set-output name=merge_type::merge"
          elif [ ${{ github.base_ref }} == 'dev' || ${{ github.base_ref }} == 'hotfix' ]; then
            echo "::set-output name=merge_type::squash"
          fi
      - name: Merge
        uses: squalrus/merge-bot@v0.4.5
        with:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          test: false
          reviewers: false
          labels: ''
          blocking_labels: 'blocked, revoked'
          checks_enabled: false
          method: ${{ steps.eval.outputs.merge_type }}
          delete_source_branch: ${{ github.base_ref == 'dev' || github.base_ref == 'hotfix' }}
  release:
    runs-on: ubuntu-latest
    needs:
      - merge
    steps:
      - run: echo "ToDo"
      
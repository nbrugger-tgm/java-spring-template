on:
  pull_request:
    types:
      - labeled
    branches:
      - master
      - main
      - staging
  pull_request_target:
    types:
      - labeled
    branches:
      - dev
      - hotfix

env:
  is_fork: ${{ github.event.pull_request.head.repo.full_name != github.repository && github.actor != 'dependabot[bot]' }}

permissions:
  actions: read
  issues: write
  contents: write
  discussions: write
  pull-requests: write
  repository-projects: write

name: Finilize PR
################################################################################
#  this steps assumes that a careful and security-aware review is done         #
#  If you want to be save and dont trust the security review,                  #
#  we advise to disable this step for forks by adding :                        #
#                                                                              #
#   && env.is_fork == 'false'                                                  #
#                                                                              #
#  to the if condition of the lockdown job                                     #
################################################################################
jobs:
  semver:
    name: Bump version
    runs-on: ubuntu-latest
    if: github.event.label.name == 'ready for merge'
    outputs:
      version: ${{ steps.cz.outputs.version }}
      prerelease: ${{ steps.branch.outputs.release_stage }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - name: Scan release stage
        id: branch
        run: |
          if [ "${{ github.base_ref }}" == 'main' ] || [ "${{ github.base_ref }}" == 'master' ]; then
            echo "::set-output name=release_stage::"
          elif [ "${{ github.base_ref }}" == 'staging' ]; then
            echo "::set-output name=release_stage::rc"
          elif [ "${{ github.base_ref }}" == "dev" ] || [ "${{ github.base_ref }}" == 'hotfix' ]; then
            echo "::set-output name=release_stage::beta"
          fi
      - name: Bump version
        id: cz
        uses: commitizen-tools/commitizen-action@0.10.0
        with:
          push: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}
          changelog_increment_filename: changelog_diff.md
          prerelease: ${{ steps.branch.outputs.release_stage }}
      - name: Upload changelog
        uses: actions/upload-artifact@v2
        with:
          path: changelog_diff.md
          name: changelog_diff.md
          mime-type: text/markdown
      - name: Push bump
        run: |
          git push

  openapi:
    runs-on: ubuntu-latest
    name: Autogen OpenAPI
    needs:
      - semver
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Check api changes
        uses: tony84727/changed-file-filter@v0.2.0
        id: filter
        with:
          filters: |
            api:
              - modules/api/src/**
      - name: Generate OpenAPI
        if: steps.filter.outputs.api == 'true'
        uses: ./.github/actions/gradle
        with:
          task: generateOpenApiDocs autogenClients
      - name: Checkout base branch
        if: steps.filter.outputs.api == 'true'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.base_ref }}
          path: 'base'
      - name: Build OAS diff
        if: steps.filter.outputs.api == 'true'
        uses: nbrugger-tgm/open-api-diff-notes-action@master
        with:
          headFile: openapi.json
          baseFile: base/openapi.json
          output_path: ~/openapi_diff.json
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Commit OAS
        if: steps.filter.outputs.api == 'true'
        uses: swinton/commit@v2.0.0
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            openapi.json
          commit-message: 'docs(oas): add PR changes to OAS'
          ref: ${{ github.head_ref }}
      - name: Commit clients
        if: steps.filter.outputs.api == 'true'
        uses: EndBug/add-and-commit@v7
        with:
          add: 'client'
          default_author: github_actions
          message: 'chore: autogenerate clients'
          pathspec_error_handling: ignore
          branch: ${{ github.head_ref }}
          # Arguments for the git pull command. Use NO-PULL to avoid the action pulling at all.
          # Default   pull: '--no-rebase'
          push: true
  merge:
    name: Merge PR
    runs-on: ubuntu-latest
    needs:
      - openapi
      - semver
    outputs:
      commit: ${{ steps.merge.outputs.commit }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Eval merge type
        id: eval
        run: |
          if [ ${{ github.base_ref }} == 'main' ]; then
            echo "::set-output name=merge_type::merge"
          elif [ ${{ github.base_ref }} == 'staging' ]; then
            echo "::set-output name=merge_type::merge"
          elif [ ${{ github.base_ref }} == 'dev' ] || [ ${{ github.base_ref }} == 'hotfix' ]; then
            echo "::set-output name=merge_type::squash"
          fi
      - name: Merge
        id: merge
        uses: nbrugger-tgm/merge-pr-action@v0.2.2
        with:
          token: ${{ secrets.PAT }}
          method: ${{ steps.eval.outputs.merge_type }}
      - name: approve merge
        if: always()
        uses: ./.github/actions/set-label
        with:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          label: 'ready for merge'
          needed: false
  release:
    runs-on: ubuntu-latest
    needs:
      - merge
      - semver
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.merge.outputs.commit }}
      - name: Create tag
        run: git tag ${{ needs.semver.outputs.version }}
      - name: Push tag
        run: git push origin ${{ needs.semver.outputs.version }}
      - name: Download diff
        uses: actions/download-artifact@v2
        with:
          name: changelog_diff.md
      - name: compile
        uses: ./.github/actions/gradle
        with:
          task: bootJar
      - name: build docker image
        uses: ./.github/actions/gradle
        env:
          DOCKER_REPO_KEY: ${{ secrets.DOCKER_REPO_KEY }}
        with:
          task: bootBuildImage
      - name: add info to changelog
        run: |
          echo "## Docker" >> changelog_diff.md
          echo "Pull me : \`docker pull niton.jfrog.io/docker-services/project-name:${{ needs.semver.outputs.version }}\`" >> changelog_diff.md
          echo "**Env** " >> changelog_diff.md
          echo "* **DB_URL**: The url to use as datasource (default h2)" >> changelog_diff.md
          echo "" >> changelog_diff.md
          echo "**Ports**" >> changelog_diff.md
          echo "* **8080**: The port to use for the service" >> changelog_diff.md
      - name: Create release
        uses: ncipollo/release-action@v1.8.10
        with:
          artifacts: "modules/app/build/libs/app-${{ needs.semver.outputs.version }}.jar"
          bodyFile: changelog_diff.md
          artifactContentType: application/java-archive
          draft: false
          prerelease: ${{ needs.semver.outputs.prerelease != ''}}
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.semver.outputs.version }}